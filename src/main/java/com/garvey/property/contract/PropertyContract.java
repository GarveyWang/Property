package com.garvey.property.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint16;
import org.web3j.abi.datatypes.generated.Uint24;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint64;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tuples.generated.Tuple6;
import org.web3j.tuples.generated.Tuple7;
import org.web3j.tuples.generated.Tuple8;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.2.0.
 */
public class PropertyContract extends Contract {
    private static final String BINARY = "608060405260098054603260ff199091161762ffff0019166103001790553480156200002a57600080fd5b50604051620043973803806200439783398101604090815281516020830151918301519083019291820191016200006f838383610fff64010000000062000078810204565b505050620002cf565b62000082620001fd565b5060408051608081018252858152602080820186905281830185905261ffff84166060830152600160a060020a0333166000908152808252929092208151805192938493620000d592849201906200022a565b506020828101518051620000f092600185019201906200022a565b50604082015180516200010e9160028401916020909101906200022a565b5060608201518160030160006101000a81548161ffff021916908361ffff160217905550905050336001856040518082805190602001908083835b602083106200016a5780518252601f19909201916020918201910162000149565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092208054600160a060020a0319908116600160a060020a0395861617909155600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909116339094169390931790925550505050505050565b608060405190810160405280606081526020016060815260200160608152602001600061ffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026d57805160ff19168380011785556200029d565b828001600101855582156200029d579182015b828111156200029d57825182559160200191906001019062000280565b50620002ab929150620002af565b5090565b620002cc91905b80821115620002ab5760008155600101620002b6565b90565b6140b880620002df6000396000f3006080604052600436106102205763ffffffff60e060020a6000350416625843b481146102255780630c298293146102bb57806310857e41146103ec5780633250c626146104df57806357346243146105385780635fabcaaf146105555780635fce88fe1461058d57806365ec1a8b146106bc57806369a488691461071c5780636d51f6a31461077c57806372fe7016146108f2578063790f54571461090e5780637a81bfac1461093c5780637ac95924146109515780637bf4e90d146109695780637eea39e3146109c2578063835ddcc114610af1578063848a19d314610b065780638872c9a114610b1b5780638886494914610b3357806389040e5914610d175780638ccab82b14610d38578063a234180614610d91578063aac34b4e14610da9578063ad15aad214610dbe578063b086f1b814611025578063b16813c91461103a578063b2c2f2e81461104f578063b3c37de214611067578063b5cb15f714611278578063bad68d0f1461128d578063bfe4f788146112c5578063c53eb5b9146112da578063cdc77f98146112f2578063d032932c14611307578063d0543ddc1461131f578063d46789b31461133a578063d9dcba3814611356578063dbb3a1631461137a578063eace61b2146113a2578063ead0327d14611481578063eada609d146114a2578063ecca031f14611667578063f16e4e461461167f578063f27ab5cb146116a0578063fcea94d1146116b8578063ff5d32fe146116d0575b600080fd5b34801561023157600080fd5b50610246600160a060020a03600435166116e8565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610280578181015183820152602001610268565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c757600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526103da94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923567ffffffffffffffff1693506117b192505050565b60408051918252519081900360200190f35b3480156103f857600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526104cb95833562ffffff1695369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506119419650505050505050565b604080519115158252519081900360200190f35b3480156104eb57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526104cb9436949293602493928401919081908401838280828437509497506119dd9650505050505050565b34801561054457600080fd5b5061055360ff60043516611a4b565b005b34801561056157600080fd5b50610576600160a060020a0360043516611a94565b6040805161ffff9092168252519081900360200190f35b34801561059957600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526103da94369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b67ffffffffffffffff8b35169b909a90999401975091955091820193509150819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923567ffffffffffffffff169350611ab692505050565b3480156106c857600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526105539436949293602493928401919081908401838280828437509497505050923562ffffff169350611c8092505050565b34801561072857600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526105539436949293602493928401919081908401838280828437509497505050923562ffffff169350611da392505050565b34801561078857600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526103da94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020888301358a018035601f8101839004830284018301909452838352979a893567ffffffffffffffff169a8a83013515159a919990985060609091019650919450908101925081908401838280828437509497505050923567ffffffffffffffff169350611e7c92505050565b3480156108fe57600080fd5b506103da61ffff600435166120d3565b34801561091a57600080fd5b50610926600435612229565b6040805160ff9092168252519081900360200190f35b34801561094857600080fd5b506103da61226e565b34801561095d57600080fd5b50610553600435612275565b34801561097557600080fd5b50610981600435612435565b60408051951515865261ffff9485166020870152600160a060020a03909316858401529216606084015262ffffff9091166080830152519081900360a00190f35b3480156109ce57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526103da94369492936024939284019190819084018382808284375050604080516020601f818a01358b0180359182018390048302840183018552818452989b67ffffffffffffffff8b35169b909a90999401975091955091820193509150819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923567ffffffffffffffff16935061249f92505050565b348015610afd57600080fd5b506103da612571565b348015610b1257600080fd5b506103da612577565b348015610b2757600080fd5b5061055360043561257d565b348015610b3f57600080fd5b50610b4b600435612739565b60408051600160a060020a038416608082015267ffffffffffffffff831660a082015260c0808252885190820152875190918291602080840192840191606085019160e0860191908d019080838360005b83811015610bb4578181015183820152602001610b9c565b50505050905090810190601f168015610be15780820380516001836020036101000a031916815260200191505b5085810384528a5181528a516020918201918c019080838360005b83811015610c14578181015183820152602001610bfc565b50505050905090810190601f168015610c415780820380516001836020036101000a031916815260200191505b5085810383528951815289516020918201918b019080838360005b83811015610c74578181015183820152602001610c5c565b50505050905090810190601f168015610ca15780820380516001836020036101000a031916815260200191505b5085810382528851815288516020918201918a019080838360005b83811015610cd4578181015183820152602001610cbc565b50505050905090810190601f168015610d015780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b348015610d2357600080fd5b50610246600160a060020a03600435166129e6565b348015610d4457600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526104cb943694929360249392840191908190840183828082843750949750612a589650505050505050565b348015610d9d57600080fd5b50610553600435612a8b565b348015610db557600080fd5b506103da612bc6565b348015610dca57600080fd5b50610dd6600435612bcc565b604051808060200180602001806020018060200189600160a060020a0316600160a060020a031681526020018867ffffffffffffffff1667ffffffffffffffff168152602001871515151581526020018060200186810386528e818151815260200191508051906020019080838360005b83811015610e5f578181015183820152602001610e47565b50505050905090810190601f168015610e8c5780820380516001836020036101000a031916815260200191505b5086810385528d5181528d516020918201918f019080838360005b83811015610ebf578181015183820152602001610ea7565b50505050905090810190601f168015610eec5780820380516001836020036101000a031916815260200191505b5086810384528c5181528c516020918201918e019080838360005b83811015610f1f578181015183820152602001610f07565b50505050905090810190601f168015610f4c5780820380516001836020036101000a031916815260200191505b5086810383528b5181528b516020918201918d019080838360005b83811015610f7f578181015183820152602001610f67565b50505050905090810190601f168015610fac5780820380516001836020036101000a031916815260200191505b50868103825287518152875160209182019189019080838360005b83811015610fdf578181015183820152602001610fc7565b50505050905090810190601f16801561100c5780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b34801561103157600080fd5b506103da612f22565b34801561104657600080fd5b506103da612f28565b34801561105b57600080fd5b506103da600435612f2e565b34801561107357600080fd5b5061107f600435612f70565b604051808060200188600160a060020a0316600160a060020a031681526020018767ffffffffffffffff1667ffffffffffffffff1681526020018060200180602001806020018667ffffffffffffffff1667ffffffffffffffff16815260200185810385528c818151815260200191508051906020019080838360005b838110156111145781810151838201526020016110fc565b50505050905090810190601f1680156111415780820380516001836020036101000a031916815260200191505b5085810384528951815289516020918201918b019080838360005b8381101561117457818101518382015260200161115c565b50505050905090810190601f1680156111a15780820380516001836020036101000a031916815260200191505b5085810383528851815288516020918201918a019080838360005b838110156111d45781810151838201526020016111bc565b50505050905090810190601f1680156112015780820380516001836020036101000a031916815260200191505b50858103825287518152875160209182019189019080838360005b8381101561123457818101518382015260200161121c565b50505050905090810190601f1680156112615780820380516001836020036101000a031916815260200191505b509b50505050505050505050505060405180910390f35b34801561128457600080fd5b506103da61322d565b34801561129957600080fd5b506112ac60043561ffff60243516613233565b6040805163ffffffff9092168252519081900360200190f35b3480156112d157600080fd5b5061092661329a565b3480156112e657600080fd5b5061107f6004356132a3565b3480156112fe57600080fd5b506112ac6132bf565b34801561131357600080fd5b506109266004356132ce565b34801561132b57600080fd5b506105766004356024356132e0565b34801561134657600080fd5b5061055361ffff60043516613372565b34801561136257600080fd5b5061055360043561ffff6024351660443515156133b3565b34801561138657600080fd5b506103da61ffff60043516600160a060020a03602435166136a8565b3480156113ae57600080fd5b5060408051602060046024803582810135601f81018590048502860185019096528585526104cb95833562ffffff1695369560449491939091019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a99988101979196509182019450925082915084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506137fb9650505050505050565b34801561148d57600080fd5b50610246600160a060020a0360043516613890565b3480156114ae57600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526114fb9436949293602493928401919081908401838280828437509497506139089650505050505050565b6040518086600160a060020a0316600160a060020a031681526020018060200180602001806020018561ffff1661ffff168152602001848103845288818151815260200191508051906020019080838360005b8381101561156657818101518382015260200161154e565b50505050905090810190601f1680156115935780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b838110156115c65781810151838201526020016115ae565b50505050905090810190601f1680156115f35780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b8381101561162657818101518382015260200161160e565b50505050905090810190601f1680156116535780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b34801561167357600080fd5b506104cb60043561399b565b34801561168b57600080fd5b506114fb600160a060020a03600435166139e0565b3480156116ac57600080fd5b50610553600435613bd9565b3480156116c457600080fd5b50610981600435613c0d565b3480156116dc57600080fd5b506114fb600435613c25565b606060008083600160a060020a0316600160a060020a031681526020019081526020016000206001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117a55780601f1061177a576101008083540402835291602001916117a5565b820191906000526020600020905b81548152906001019060200180831161178857829003601f168201915b50505050509050919050565b60006117bb613de6565b600160a060020a033316600090815260208190526040812060030154608016111561193757506040805160c081018252878152602080820188905291810186905260608101859052600160a060020a033316608082015267ffffffffffffffff841660a08201526005805460018101808355600083905283518051949591948694939093027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001926118709284920190613e30565b5060208281015180516118899260018501920190613e30565b50604082015180516118a5916002840191602090910190613e30565b50606082015180516118c1916003840191602090910190613e30565b5060808201516004909101805460a09093015167ffffffffffffffff1660a060020a027bffffffffffffffff000000000000000000000000000000000000000019600160a060020a0390931673ffffffffffffffffffffffffffffffffffffffff19909416939093179190911691909117905591505b5095945050505050565b600062ffffff8516158015906119c357508462ffffff166003846040518082805190602001908083835b6020831061198a5780518252601f19909201916020918201910161196b565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205462ffffff16929092149150505b156119d5576119d58484846027613c5e565b949350505050565b60006004826040518082805190602001908083835b60208310611a115780518252601f1990920191602091820191016119f2565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205462ffffff1615949350505050565b600160a060020a03331660009081526020819052604081206003015461080016118015611a7c575060648160ff1611155b15611a91576009805460ff191660ff83161790555b50565b600160a060020a031660009081526020819052604090206003015461ffff1690565b6000611ac0613eae565b600160a060020a033316600090815260208190526040812060030154610100161115611c7557506040805160e081018252888152600160a060020a03331660208083019190915267ffffffffffffffff808a1693830193909352606082018890526080820187905260a0820186905291841660c08201526006805460018101808355600083905283518051949591948694939093027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0192611b859284920190613e30565b50602082810151600183018054604086015167ffffffffffffffff1660a060020a027bffffffffffffffff000000000000000000000000000000000000000019600160a060020a0390941673ffffffffffffffffffffffffffffffffffffffff19909216919091179290921691909117905560608301518051611c0e9260028501920190613e30565b5060808201518051611c2a916003840191602090910190613e30565b5060a08201518051611c46916004840191602090910190613e30565b5060c091909101516005909101805467ffffffffffffffff191667ffffffffffffffff90921691909117905591505b509695505050505050565b600160a060020a03331660009081526020819052604081206003015461040016118015611d2257506000600160a060020a03166001836040518082805190602001908083835b60208310611ce55780518252601f199092019160209182019101611cc6565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922054600160a060020a0316929092149150505b15611d9f57806004836040518082805190602001908083835b60208310611d5a5780518252601f199092019160209182019101611d3b565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805462ffffff191662ffffff949094169390931790925550505b5050565b600160a060020a03331660009081526020819052604081206003015461020016118015611e4557506000600160a060020a03166001836040518082805190602001908083835b60208310611e085780518252601f199092019160209182019101611de9565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922054600160a060020a0316929092149150505b15611d9f578060038360405180828051906020019080838360208310611d5a5780518252601f199092019160209182019101611d3b565b60006060611e88613ee9565b600160a060020a03331660009081526020819052604081206003015460101611156120c5578367ffffffffffffffff16604051908082528060200260200182016040528015611ee1578160200160208202803883390190505b5060408051610120810182528d815260208082018e90529181018c9052606081018b9052600160a060020a033316608082015267ffffffffffffffff8a1660a082015288151560c082015260e0810188905261010081018390526008805460018101808355600092909252825180519597509295509093859360099092027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30192611f90928492910190613e30565b506020828101518051611fa99260018501920190613e30565b5060408201518051611fc5916002840191602090910190613e30565b5060608201518051611fe1916003840191602090910190613e30565b50608082015160048201805460a085015160c0860151151560e060020a027fffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffff67ffffffffffffffff90921660a060020a027bffffffffffffffff000000000000000000000000000000000000000019600160a060020a0390961673ffffffffffffffffffffffffffffffffffffffff199094169390931794909416919091171691909117905560e082015180516120a2916005840191602090910190613e30565b5061010082015180516120bf916006840191602090910190613f4b565b50505092505b505098975050505050505050565b60006120dd613ff6565b600160a060020a0333166000908152602081815260408220600301541611156122235750506040805160a081018252600180825261ffff8481166020840190815233600160a060020a0390811695850195865260006060860181815260808701828152600a8054978801808255935287517fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86002909802979097018054955199519251915160ff199096169715159790971762ffff001916610100998716999099029890981776ffffffffffffffffffffffffffffffffffffffff0000001916630100000091909316029190911778ffff0000000000000000000000000000000000000000000000191660b860020a96841696909602959095177affff00000000000000000000000000000000000000000000000000191660c860020a91909216021790555b50919050565b600080600a8381548110151561223b57fe5b6000918252602080832033600160a060020a031684526002929092029091016001019052604090205460ff169392505050565b6006545b90565b600160a060020a033316600090815260208181526040822060030154829182911681101561242f57600a8054859081106122ab57fe5b60009182526020909120600290910201805490935060ff1680156122e45750825433600160a060020a0390811663010000009092041614155b801561230b5750600160a060020a033316600090815260018401602052604090205460ff16155b1561236e57825478ffff0000000000000000000000000000000000000000000000198116600160b860020a9283900461ffff90811682011690920217845533600160a060020a0316600090815281850160205260409020805460ff191690911790555b825460095460b860020a820461ffff90811660c860020a9093048116929092019350610100900481169083161061242f57600954835460ff909116830261ffff90811660b860020a909204811660640216111561242657508154600160a060020a03630100000082041660009081526020819052604090206003810154909161010090041661ffff16151561242657825460038201805461ffff19811661010090930461ffff90811691811691909101169190911790555b825460ff191683555b50505050565b600080600080600080600b8781548110151561244d57fe5b600091825260209091206002909102015460ff81169861ffff610100830481169950600160a060020a036301000000840416985060b860020a83048116975060c860020a909204909116945092505050565b60006124a9613eae565b600160a060020a033316600090815260208190526040812060030154610100161115611c7557506040805160e081018252888152600160a060020a03331660208083019190915267ffffffffffffffff808a1693830193909352606082018890526080820187905260a0820186905291841660c082015260078054600181018083556000929092528251805193949293859360069093027fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880192611b85928492910190613e30565b60085490565b60055490565b600160a060020a033316600090815260208181526040822060030154829182911681101561242f57600b8054859081106125b357fe5b60009182526020909120600290910201805490935060ff1680156125ec5750825433600160a060020a0390811663010000009092041614155b80156126135750600160a060020a033316600090815260018401602052604090205460ff16155b1561267657825478ffff0000000000000000000000000000000000000000000000198116600160b860020a9283900461ffff90811682011690920217845533600160a060020a0316600090815281850160205260409020805460ff191690911790555b825460095460b860020a820461ffff90811660c860020a9093048116929092019350610100900481169083161061242f57600954835460ff909116830261ffff90811660b860020a909204811660640216111561242657508154600160a060020a03630100000082041660009081526020819052604090206003810154909161010090041661ffff161561242657825460038201805461ffff61010090930483168184160390921661ffff19909216919091179055825460ff1916835550505050565b606080606080600080600060058881548110151561275357fe5b600091825260209182902060059190910201600481015481546040805160026101006001808616159190910260001901909416819004601f81018890048802830188019093528282529496508695928601948601936003870193600160a060020a0382169360a060020a90920467ffffffffffffffff169291889183018282801561281f5780601f106127f45761010080835404028352916020019161281f565b820191906000526020600020905b81548152906001019060200180831161280257829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959b508a9450925084019050828280156128ad5780601f10612882576101008083540402835291602001916128ad565b820191906000526020600020905b81548152906001019060200180831161289057829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a508994509250840190508282801561293b5780601f106129105761010080835404028352916020019161293b565b820191906000526020600020905b81548152906001019060200180831161291e57829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959950889450925084019050828280156129c95780601f1061299e576101008083540402835291602001916129c9565b820191906000526020600020905b8154815290600101906020018083116129ac57829003601f168201915b505050505092509650965096509650965096505091939550919395565b600160a060020a0381166000908152602081815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156117a55780601f1061177a576101008083540402835291602001916117a5565b600060038260405180828051906020019080838360208310611a115780518252601f1990920191602091820191016119f2565b600160a060020a033316600090815260208181526040822060030154829116811015612bc157600b805484908110612abf57fe5b60009182526020909120600290910201805490925060ff168015612af85750815433600160a060020a0390811663010000009092041614155b8015612b1f5750600160a060020a033316600090815260018301602052604090205460ff16155b15612b865781547affff00000000000000000000000000000000000000000000000000198116600160c860020a9283900461ffff90811682011690920217835533600160a060020a03166000908152908301602052604090208054600260ff199091161790555b50805460095460b860020a820461ffff90811660c860020a90930481169290920191610100909104811690821610612bc157815460ff191682555b505050565b600b5490565b60608060608060008060006060600060088a815481101515612bea57fe5b600091825260209182902060099190910201600481015481546040805160026101006001808616159190910260001901909416819004601f81018890048802830188019093528282529496508695928601948601936003870193600160a060020a0382169360a060020a830467ffffffffffffffff169360e060020a90930460ff169260058a019290918a91830182828015612cc75780601f10612c9c57610100808354040283529160200191612cc7565b820191906000526020600020905b815481529060010190602001808311612caa57829003601f168201915b50508a5460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959d508c945092508401905082828015612d555780601f10612d2a57610100808354040283529160200191612d55565b820191906000526020600020905b815481529060010190602001808311612d3857829003601f168201915b5050895460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959c508b945092508401905082828015612de35780601f10612db857610100808354040283529160200191612de3565b820191906000526020600020905b815481529060010190602001808311612dc657829003601f168201915b5050885460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959b508a945092508401905082828015612e715780601f10612e4657610100808354040283529160200191612e71565b820191906000526020600020905b815481529060010190602001808311612e5457829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959a5086945092508401905082828015612eff5780601f10612ed457610100808354040283529160200191612eff565b820191906000526020600020905b815481529060010190602001808311612ee257829003601f168201915b505050505090509850985098509850985098509850985050919395975091939597565b60075490565b600a5490565b600080600883815481101515612f4057fe5b6000918252602080832033600160a060020a03168452600992909202909101600701905260409020549392505050565b60606000806060806060600080600689815481101515612f8c57fe5b60009182526020918290206001600690920201818101546005820154825460408051601f60026000199885161561010002989098019093168790049283018890048802810188019091528181529396508695600160a060020a0384169567ffffffffffffffff60a060020a90950485169590880194600389019460048a01949116928991908301828280156130625780601f1061303757610100808354040283529160200191613062565b820191906000526020600020905b81548152906001019060200180831161304557829003601f168201915b5050875460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959c50899450925084019050828280156130f05780601f106130c5576101008083540402835291602001916130f0565b820191906000526020600020905b8154815290600101906020018083116130d357829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529599508894509250840190508282801561317e5780601f106131535761010080835404028352916020019161317e565b820191906000526020600020905b81548152906001019060200180831161316157829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529598508794509250840190508282801561320c5780601f106131e15761010080835404028352916020019161320c565b820191906000526020600020905b8154815290600101906020018083116131ef57829003601f168201915b50505050509150975097509750975097509750975050919395979092949650565b60025490565b60008060088481548110151561324557fe5b90600052602060002090600902019050806006018361ffff1681548110151561326a57fe5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1691505b5092915050565b60095460ff1690565b60606000806060806060600080600789815481101515612f8c57fe5b600954610100900461ffff1690565b600080600b8381548110151561223b57fe5b6000806008848154811015156132f257fe5b60009182526020822060099190910201600481015490925060a060020a900467ffffffffffffffff16111561329357600160a060020a0333166000908152600782016020526040902080548490811061334757fe5b90600052602060002090601091828204019190066002029054906101000a900461ffff169150613293565b600160a060020a033316600090815260208190526040812060030154610800161115611a91576009805461ffff83166101000262ffff001990911617905550565b600160a060020a0333166000908152602081815260408220600301548291168110156136a15760088054869081106133e757fe5b60009182526020822060099190910201600481015490935060a060020a900467ffffffffffffffff161180156134385750600160a060020a033316600090815260088301602052604090205460ff16155b156136a15750600160a060020a033316600090815260078201602052604090205480151561356857600160a060020a033316600090815260078301602090815260408220805460018181018355918452919092206010820401805461ffff8089166002600f909516949094026101000a84810291021990911617905560068401805490919081106134c557fe5b600091825260209091206008820401805463ffffffff6004600790941684026101000a808304821690950181168502940219169290921790915582015460ff60e060020a909104161561353d5733600160a060020a031660009081526008830160205260409020805460ff1916841515179055613563565b600160a060020a03331660009081526008830160205260409020805460ff191660011790555b6136a1565b600482015460e060020a900460ff1680156135d35750600160a060020a03331660009081526007830160205260409020805461ffff8616919060001984019081106135af57fe5b60009182526020909120601082040154600f9091166002026101000a900461ffff16105b156136a157600160a060020a033316600090815260078301602090815260408220805460018181018355918452919092206010820401805461ffff8089166002600f909516949094026101000a848102910219909116179055600684018054909190811061363d57fe5b600091825260208083206008808404909101805460079094166004026101000a63ffffffff818102198616958290048116979097019096169095029290921790935533600160a060020a03168252840190915260409020805460ff19168415151790555b5050505050565b60006136b2613ff6565b600160a060020a0333166000908152602081815260408220600301541611156132935750506040805160a081018252600180825261ffff85811660208401908152600160a060020a0386811695850195865260006060860181815260808701828152600b8054978801808255935287517f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db96002909802979097018054955199519251915160ff199096169715159790971762ffff001916610100998716999099029890981776ffffffffffffffffffffffffffffffffffffffff0000001916630100000091909316029190911778ffff0000000000000000000000000000000000000000000000191660b860020a96841696909602959095177affff00000000000000000000000000000000000000000000000000191660c860020a9190921602179055613293565b600062ffffff85161580159061387d57508462ffffff166004846040518082805190602001908083835b602083106138445780518252601f199092019160209182019101613825565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205462ffffff16929092149150505b156119d5576119d58484846103ff613c5e565b600160a060020a038116600090815260208181526040918290206002908101805484516001821615610100026000190190911692909204601f810184900484028301840190945283825260609391929091908301828280156117a55780601f1061177a576101008083540402835291602001916117a5565b600060608060606000806001876040518082805190602001908083835b602083106139445780518252601f199092019160209182019101613925565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922054600160a060020a0316925061398891508290506139e0565b939b929a50909850965090945092505050565b6000806008838154811015156139ad57fe5b6000918252602080832033600160a060020a031684526009929092029091016008019052604090205460ff169392505050565b600160a060020a038116600090815260208181526040808320600381015481548351601f60026000196001858116156101000291909101909416819004918201889004880283018801909652808252606096879687968a9690958c958795918601949386019361ffff9093169290918691830182828015613aa25780601f10613a7757610100808354040283529160200191613aa2565b820191906000526020600020905b815481529060010190602001808311613a8557829003601f168201915b5050865460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295995088945092508401905082828015613b305780601f10613b0557610100808354040283529160200191613b30565b820191906000526020600020905b815481529060010190602001808311613b1357829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815295985087945092508401905082828015613bbe5780601f10613b9357610100808354040283529160200191613bbe565b820191906000526020600020905b815481529060010190602001808311613ba157829003601f168201915b50505050509150955095509550955095505091939590929450565b600160a060020a033316600090815260208181526040822060030154829116811015612bc157600a805484908110612abf57fe5b600080600080600080600a8781548110151561244d57fe5b60006060806060600080600287815481101515613c3e57fe5b600091825260209091200154600160a060020a03169050613988816139e0565b613c66614024565b5060408051608081018252858152602080820186905281830185905261ffff84166060830152600160a060020a0333166000908152808252929092208151805192938493613cb79284920190613e30565b506020828101518051613cd09260018501920190613e30565b5060408201518051613cec916002840191602090910190613e30565b5060608201518160030160006101000a81548161ffff021916908361ffff160217905550905050336001856040518082805190602001908083835b60208310613d465780518252601f199092019160209182019101613d27565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a0395861617909155600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909116339094169390931790925550505050505050565b60c060405190810160405280606081526020016060815260200160608152602001606081526020016000600160a060020a03168152602001600067ffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613e7157805160ff1916838001178555613e9e565b82800160010185558215613e9e579182015b82811115613e9e578251825591602001919060010190613e83565b50613eaa929150614051565b5090565b6040805160e08101825260608082526000602083018190529282018390528082018190526080820181905260a082015260c081019190915290565b61012060405190810160405280606081526020016060815260200160608152602001606081526020016000600160a060020a03168152602001600067ffffffffffffffff16815260200160001515815260200160608152602001606081525090565b82805482825590600052602060002090600701600890048101928215613fea5791602002820160005b83821115613fb857835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302613f74565b8015613fe85782816101000a81549063ffffffff0219169055600401602081600301049283019260010302613fb8565b505b50613eaa92915061406b565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b608060405190810160405280606081526020016060815260200160608152602001600061ffff1681525090565b61227291905b80821115613eaa5760008155600101614057565b61227291905b80821115613eaa57805463ffffffff191681556001016140715600a165627a7a723058202918e7f727053f438694936c611e0cf028629ac4ff39a587670095743bf39d4a0029";

    public static final String FUNC_GETENCRYPTEDPHONE = "getEncryptedPhone";

    public static final String FUNC_ADDPUBLICITYINFO = "addPublicityInfo";

    public static final String FUNC_REGISTERPROPRIETOR = "registerProprietor";

    public static final String FUNC_HASPROPERTYREGISTRYCODE = "hasPropertyRegistryCode";

    public static final String FUNC_SETSETTLEDRATIO = "setSettledRatio";

    public static final String FUNC_GETAUTHORITY = "getAuthority";

    public static final String FUNC_ADDINCOMEITEM = "addIncomeItem";

    public static final String FUNC_ADDPROPERTYREGISTRYCODE = "addPropertyRegistryCode";

    public static final String FUNC_ADDPROPRIETORREGISTRYCODE = "addProprietorRegistryCode";

    public static final String FUNC_ADDMOTION = "addMotion";

    public static final String FUNC_ADDAUTHAPPLICATION = "addAuthApplication";

    public static final String FUNC_GETAUTHAPPLICATIONVOTE = "getAuthApplicationVote";

    public static final String FUNC_GETINCOMEITEMCOUNT = "getIncomeItemCount";

    public static final String FUNC_AGREEAUTHAPPLICATION = "agreeAuthApplication";

    public static final String FUNC_GETAUTHCANCELLATION = "getAuthCancellation";

    public static final String FUNC_ADDEXPENSEITEM = "addExpenseItem";

    public static final String FUNC_GETMOTIONCOUNT = "getMotionCount";

    public static final String FUNC_GETPUBLICITYINFOCOUNT = "getPublicityInfoCount";

    public static final String FUNC_AGREEAUTHCANCELLATION = "agreeAuthCancellation";

    public static final String FUNC_GETPUBLICITYINFO = "getPublicityInfo";

    public static final String FUNC_GETENCRYPTEDPWD = "getEncryptedPwd";

    public static final String FUNC_HASPROPRIETORREGISTRYCODE = "hasProprietorRegistryCode";

    public static final String FUNC_DISAGREEAUTHCANCELLATION = "disagreeAuthCancellation";

    public static final String FUNC_GETAUTHCANCELLATIONCOUNT = "getAuthCancellationCount";

    public static final String FUNC_GETMOTION = "getMotion";

    public static final String FUNC_GETEXPENSEITEMCOUNT = "getExpenseItemCount";

    public static final String FUNC_GETAUTHAPPLICATIONCOUNT = "getAuthApplicationCount";

    public static final String FUNC_GETVOTECOUNT = "getVoteCount";

    public static final String FUNC_GETINCOMEITEM = "getIncomeItem";

    public static final String FUNC_GETUSERCOUNT = "getUserCount";

    public static final String FUNC_GETTOTALVOTE = "getTotalVote";

    public static final String FUNC_GETSETTLEDRATIO = "getSettledRatio";

    public static final String FUNC_GETEXPENSEITEM = "getExpenseItem";

    public static final String FUNC_GETSETTLEDMINCOUNT = "getSettledMinCount";

    public static final String FUNC_GETAUTHCANCELLATIONVOTE = "getAuthCancellationVote";

    public static final String FUNC_GETVOTEINDEX = "getVoteIndex";

    public static final String FUNC_SETSETTLEDMINCOUNT = "setSettledMinCount";

    public static final String FUNC_VOTEOPTION = "voteOption";

    public static final String FUNC_ADDAUTHCANCELLATION = "addAuthCancellation";

    public static final String FUNC_REGISTERPROPERTY = "registerProperty";

    public static final String FUNC_GETNICKNAME = "getNickName";

    public static final String FUNC_GETUSERBYPHONE = "getUserByPhone";

    public static final String FUNC_HASVOTED = "hasVoted";

    public static final String FUNC_GETUSERBYADDR = "getUserByAddr";

    public static final String FUNC_DISAGREEAUTHAPPLICATION = "disagreeAuthApplication";

    public static final String FUNC_GETAUTHAPPLICATION = "getAuthApplication";

    public static final String FUNC_GETUSERBYINDEX = "getUserByIndex";

    @Deprecated
    protected PropertyContract(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected PropertyContract(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected PropertyContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected PropertyContract(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<String> getEncryptedPhone(String _addr) {
        final Function function = new Function(FUNC_GETENCRYPTEDPHONE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> addPublicityInfo(String _title, String _content, String _fileHashes, String _fileNames, BigInteger _timestamp) {
        final Function function = new Function(
                FUNC_ADDPUBLICITYINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.Utf8String(_content), 
                new org.web3j.abi.datatypes.Utf8String(_fileHashes), 
                new org.web3j.abi.datatypes.Utf8String(_fileNames), 
                new org.web3j.abi.datatypes.generated.Uint64(_timestamp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> registerProprietor(BigInteger _code, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        final Function function = new Function(
                FUNC_REGISTERPROPRIETOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint24(_code), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> hasPropertyRegistryCode(String _encryptedPhone) {
        final Function function = new Function(FUNC_HASPROPERTYREGISTRYCODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPhone)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> setSettledRatio(BigInteger _settledRatio) {
        final Function function = new Function(
                FUNC_SETSETTLEDRATIO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint8(_settledRatio)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAuthority(String _addr) {
        final Function function = new Function(FUNC_GETAUTHORITY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> addIncomeItem(String _payer, BigInteger _amountInCents, String _desc, String _fileHashes, String _fileNames, BigInteger _timestamp) {
        final Function function = new Function(
                FUNC_ADDINCOMEITEM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_payer), 
                new org.web3j.abi.datatypes.generated.Uint64(_amountInCents), 
                new org.web3j.abi.datatypes.Utf8String(_desc), 
                new org.web3j.abi.datatypes.Utf8String(_fileHashes), 
                new org.web3j.abi.datatypes.Utf8String(_fileNames), 
                new org.web3j.abi.datatypes.generated.Uint64(_timestamp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addPropertyRegistryCode(String _encryptedPhone, BigInteger code) {
        final Function function = new Function(
                FUNC_ADDPROPERTYREGISTRYCODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.generated.Uint24(code)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addProprietorRegistryCode(String _encryptedPhone, BigInteger code) {
        final Function function = new Function(
                FUNC_ADDPROPRIETORREGISTRYCODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.generated.Uint24(code)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addMotion(String _title, String _content, String _fileHashes, String _fileNames, BigInteger _timestamp, Boolean _multipleVote, String _options, BigInteger _length) {
        final Function function = new Function(
                FUNC_ADDMOTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_title), 
                new org.web3j.abi.datatypes.Utf8String(_content), 
                new org.web3j.abi.datatypes.Utf8String(_fileHashes), 
                new org.web3j.abi.datatypes.Utf8String(_fileNames), 
                new org.web3j.abi.datatypes.generated.Uint64(_timestamp), 
                new org.web3j.abi.datatypes.Bool(_multipleVote), 
                new org.web3j.abi.datatypes.Utf8String(_options), 
                new org.web3j.abi.datatypes.generated.Uint64(_length)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addAuthApplication(BigInteger _authority) {
        final Function function = new Function(
                FUNC_ADDAUTHAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(_authority)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAuthApplicationVote(BigInteger _authApplicationIdx) {
        final Function function = new Function(FUNC_GETAUTHAPPLICATIONVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getIncomeItemCount() {
        final Function function = new Function(FUNC_GETINCOMEITEMCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> agreeAuthApplication(BigInteger _authApplicationIdx) {
        final Function function = new Function(
                FUNC_AGREEAUTHAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>> getAuthCancellation(BigInteger _authApplicationIdx) {
        final Function function = new Function(FUNC_GETAUTHCANCELLATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Uint16>() {}, new TypeReference<Address>() {}, new TypeReference<Uint16>() {}, new TypeReference<Uint24>() {}));
        return new RemoteCall<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>>(
                new Callable<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>(
                                (Boolean) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> addExpenseItem(String _payee, BigInteger _amountInCents, String _desc, String _fileHashes, String _fileNames, BigInteger _timestamp) {
        final Function function = new Function(
                FUNC_ADDEXPENSEITEM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_payee), 
                new org.web3j.abi.datatypes.generated.Uint64(_amountInCents), 
                new org.web3j.abi.datatypes.Utf8String(_desc), 
                new org.web3j.abi.datatypes.Utf8String(_fileHashes), 
                new org.web3j.abi.datatypes.Utf8String(_fileNames), 
                new org.web3j.abi.datatypes.generated.Uint64(_timestamp)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getMotionCount() {
        final Function function = new Function(FUNC_GETMOTIONCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getPublicityInfoCount() {
        final Function function = new Function(FUNC_GETPUBLICITYINFOCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> agreeAuthCancellation(BigInteger _authApplicationIdx) {
        final Function function = new Function(
                FUNC_AGREEAUTHCANCELLATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple6<String, String, String, String, String, BigInteger>> getPublicityInfo(BigInteger _idx) {
        final Function function = new Function(FUNC_GETPUBLICITYINFO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_idx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple6<String, String, String, String, String, BigInteger>>(
                new Callable<Tuple6<String, String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple6<String, String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple6<String, String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue());
                    }
                });
    }

    public RemoteCall<String> getEncryptedPwd(String _addr) {
        final Function function = new Function(FUNC_GETENCRYPTEDPWD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> hasProprietorRegistryCode(String _encryptedPhone) {
        final Function function = new Function(FUNC_HASPROPRIETORREGISTRYCODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPhone)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> disagreeAuthCancellation(BigInteger _authApplicationIdx) {
        final Function function = new Function(
                FUNC_DISAGREEAUTHCANCELLATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getAuthCancellationCount() {
        final Function function = new Function(FUNC_GETAUTHCANCELLATIONCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple8<String, String, String, String, String, BigInteger, Boolean, String>> getMotion(BigInteger _motionIdx) {
        final Function function = new Function(FUNC_GETMOTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint64>() {}, new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple8<String, String, String, String, String, BigInteger, Boolean, String>>(
                new Callable<Tuple8<String, String, String, String, String, BigInteger, Boolean, String>>() {
                    @Override
                    public Tuple8<String, String, String, String, String, BigInteger, Boolean, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple8<String, String, String, String, String, BigInteger, Boolean, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (Boolean) results.get(6).getValue(), 
                                (String) results.get(7).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> getExpenseItemCount() {
        final Function function = new Function(FUNC_GETEXPENSEITEMCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getAuthApplicationCount() {
        final Function function = new Function(FUNC_GETAUTHAPPLICATIONCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getVoteCount(BigInteger _motionIdx) {
        final Function function = new Function(FUNC_GETVOTECOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple7<String, String, BigInteger, String, String, String, BigInteger>> getIncomeItem(BigInteger _idx) {
        final Function function = new Function(FUNC_GETINCOMEITEM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_idx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple7<String, String, BigInteger, String, String, String, BigInteger>>(
                new Callable<Tuple7<String, String, BigInteger, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple7<String, String, BigInteger, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, BigInteger, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> getUserCount() {
        final Function function = new Function(FUNC_GETUSERCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getTotalVote(BigInteger _motionIdx, BigInteger _optionIdx) {
        final Function function = new Function(FUNC_GETTOTALVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx), 
                new org.web3j.abi.datatypes.generated.Uint16(_optionIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getSettledRatio() {
        final Function function = new Function(FUNC_GETSETTLEDRATIO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple7<String, String, BigInteger, String, String, String, BigInteger>> getExpenseItem(BigInteger _idx) {
        final Function function = new Function(FUNC_GETEXPENSEITEM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_idx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint64>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint64>() {}));
        return new RemoteCall<Tuple7<String, String, BigInteger, String, String, String, BigInteger>>(
                new Callable<Tuple7<String, String, BigInteger, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple7<String, String, BigInteger, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, BigInteger, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (BigInteger) results.get(6).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> getSettledMinCount() {
        final Function function = new Function(FUNC_GETSETTLEDMINCOUNT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint32>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getAuthCancellationVote(BigInteger _authApplicationIdx) {
        final Function function = new Function(FUNC_GETAUTHCANCELLATIONVOTE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getVoteIndex(BigInteger _motionIdx, BigInteger idx) {
        final Function function = new Function(FUNC_GETVOTEINDEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx), 
                new org.web3j.abi.datatypes.generated.Uint256(idx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint16>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> setSettledMinCount(BigInteger _settledMinCount) {
        final Function function = new Function(
                FUNC_SETSETTLEDMINCOUNT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(_settledMinCount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> voteOption(BigInteger _motionIdx, BigInteger _optionIdx, Boolean finished) {
        final Function function = new Function(
                FUNC_VOTEOPTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx), 
                new org.web3j.abi.datatypes.generated.Uint16(_optionIdx), 
                new org.web3j.abi.datatypes.Bool(finished)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addAuthCancellation(BigInteger _authority, String _targetAddr) {
        final Function function = new Function(
                FUNC_ADDAUTHCANCELLATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint16(_authority), 
                new org.web3j.abi.datatypes.Address(_targetAddr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> registerProperty(BigInteger _code, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        final Function function = new Function(
                FUNC_REGISTERPROPERTY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint24(_code), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getNickName(String _addr) {
        final Function function = new Function(FUNC_GETNICKNAME, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> getUserByPhone(String _encryptedPhone) {
        final Function function = new Function(FUNC_GETUSERBYPHONE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPhone)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint16>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Boolean> hasVoted(BigInteger _motionIdx) {
        final Function function = new Function(FUNC_HASVOTED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_motionIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> getUserByAddr(String _addr) {
        final Function function = new Function(FUNC_GETUSERBYADDR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint16>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> disagreeAuthApplication(BigInteger _authApplicationIdx) {
        final Function function = new Function(
                FUNC_DISAGREEAUTHAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>> getAuthApplication(BigInteger _authApplicationIdx) {
        final Function function = new Function(FUNC_GETAUTHAPPLICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_authApplicationIdx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Uint16>() {}, new TypeReference<Address>() {}, new TypeReference<Uint16>() {}, new TypeReference<Uint24>() {}));
        return new RemoteCall<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>>(
                new Callable<Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Boolean, BigInteger, String, BigInteger, BigInteger>(
                                (Boolean) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Tuple5<String, String, String, String, BigInteger>> getUserByIndex(BigInteger _idx) {
        final Function function = new Function(FUNC_GETUSERBYINDEX, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_idx)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint16>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, BigInteger>>(
                new Callable<Tuple5<String, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<String, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    @Deprecated
    public static PropertyContract load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new PropertyContract(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static PropertyContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new PropertyContract(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static PropertyContract load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new PropertyContract(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static PropertyContract load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new PropertyContract(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<PropertyContract> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)));
        return deployRemoteCall(PropertyContract.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<PropertyContract> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)));
        return deployRemoteCall(PropertyContract.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PropertyContract> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)));
        return deployRemoteCall(PropertyContract.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<PropertyContract> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _encryptedPwd, String _encryptedPhone, String _nickName) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_encryptedPwd), 
                new org.web3j.abi.datatypes.Utf8String(_encryptedPhone), 
                new org.web3j.abi.datatypes.Utf8String(_nickName)));
        return deployRemoteCall(PropertyContract.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
